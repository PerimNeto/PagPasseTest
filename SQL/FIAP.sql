CREATE TABLE Recarga (
    id_recarga NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    valor_recarga NUMBER(10, 2),
    metodo_pagamento VARCHAR2(50),
    data_recarga DATE,
    status VARCHAR2(50),
    id_Cartao_Transporte NUMBER(38, 0),
    CONSTRAINT fk_cartao_transporte1 FOREIGN KEY (id_Cartao_Transporte) REFERENCES Cartao_Transporte(id_Cartao_Transporte)
);
--DROP TABLE recarga;

CREATE TABLE Cartao_Transporte (
    id_Cartao_Transporte NUMBER(38, 0) PRIMARY KEY,
    numero_cartao NUMBER(10, 2),
    tipo_cartao VARCHAR2(50),
    saldo_cartao NUMBER(10, 2),
    data_emissao DATE
);

CREATE TABLE Linha (
    id_linha NUMBER(38, 0) PRIMARY KEY,
    nome_linha VARCHAR2(100),
    rota VARCHAR2(255),
    tempo_estimado VARCHAR2(50),
    localizacao_atual VARCHAR2(255),
    data_ultima_atualizacao DATE,
    horario_inicio TIMESTAMP,
    horario_fim TIMESTAMP
);

CREATE TABLE Extrato (
    id_extrato NUMBER PRIMARY KEY,
    valor_tarifa NUMBER(10, 2),
    data_pagamento DATE,
    id_Cartao_Transporte NUMBER(38, 0),
    id_Linha NUMBER(38, 0),
    id_recarga NUMBER,
    CONSTRAINT fk_cartao_transporte FOREIGN KEY (id_Cartao_Transporte) REFERENCES Cartao_Transporte(id_Cartao_Transporte),
    CONSTRAINT fk_linha FOREIGN KEY (id_Linha) REFERENCES Linha(id_linha)
);
DROP TABLE Extrato;

CREATE TABLE Notificacao (
    id_notificacao NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tipo_notificacao VARCHAR2(50),
    mensagem VARCHAR2(255),
    data_envio DATE,
    email VARCHAR2(100),
    id_recarga NUMBER(10, 2),
    CONSTRAINT fk_recarga FOREIGN KEY (id_recarga) REFERENCES Recarga(id_recarga)
);

CREATE TRIGGER AtualizarSaldoAposRecarga
AFTER INSERT ON Recarga
FOR EACH ROW
BEGIN
    UPDATE Cartao_Transporte
    SET saldo_cartao = saldo_cartao + :NEW.valor_recarga
    WHERE id_Cartao_Transporte = :NEW.id_Cartao_Transporte;
END;

create or replace TRIGGER NotificarAposRecarga
AFTER INSERT ON Recarga
FOR EACH ROW
BEGIN
    INSERT INTO Notificacao (tipo_notificacao, mensagem, data_envio,email, id_recarga)
    VALUES ('atualizar' ,CONCAT('Recarga de R$', :NEW.valor_recarga),CURRENT_DATE,'fiap@gmail.com', :NEW.id_recarga);
END;

INSERT INTO Recarga VALUES (4, 2,'debito', date '1993-10-10', 'aprovado',1 );
SELECT * FROM notificacao;

CREATE OR REPLACE TRIGGER VerificarSaldoAntesPagamento
BEFORE INSERT ON Extrato
FOR EACH ROW
DECLARE 
    saldo_atual DECIMAL(10, 2);
BEGIN
    SELECT saldo_cartao INTO saldo_atual 
    FROM Cartao_Transporte 
    WHERE id_Cartao_Transporte = :NEW.id_Cartao_Transporte;

    IF saldo_atual < :NEW.valor_tarifa THEN
        RAISE_APPLICATION_ERROR(-20001, 'Saldo insuficiente para o pagamento da tarifa.');
    END IF;
END;

CREATE OR REPLACE TRIGGER NotificarAposPagamento
AFTER INSERT ON Extrato
FOR EACH ROW
BEGIN
    INSERT INTO Notificacao (tipo_notificacao, mensagem, data_envio,email, id_recarga)
    VALUES ('pg tarifa',CONCAT('Pagamento de tarifa de R$', :NEW.valor_tarifa),current_date,'macacolitas.live.curi@gmail.com',:new.id_recarga);
END;

INSERT INTO Extrato VALUES (1, 100,current_date,1,1,4 );
INSERT INTO Linha VALUES (1, 'matheus curi','rota 1','tempo 30','localizacao atual', current_date,current_date,current_date );
